set_mixer_control! hpf: 21
use_sched_ahead_time 1

use_midi_defaults port: "midi_through_midi_through_port-0_14_0"

def get_tempo
  set :tempo, 60
  return get[:tempo]
end

filter = lambda do |candidates|
  [candidates.tick]
end
[  ]
live_loop :timer do
  cue :clock
  print get_tempo
  use_bpm get_tempo
  sleep bt(1)
end

# Sync 2-bar patterns
live_loop :half, autocue: false do
  sync :clock
  cue :halfnote
  sleep bt(0.5)
end

# Synch 4-bar patterns
live_loop :quarter, autocue: false do
  sync :clock
  cue :quarternote
  sleep bt(0.25)
end

live_audio :mixer, input: 1, stereo: true

# | x - - - | x - - - | x - - - | x - - - |
live_loop :hat_4th_onbeat, sync: :clock do
  stop
  use_octave 0
  notes = (ring :A3, :C4, :E4, :G4, :A2, :C3, :E3, :G3, :D4)
  use_random_seed 2325
  at (range 0, 8, step: [0.5,1.0,0.25].choose), notes do |n| # (ring 0.0, 1.0, 2.0, 3.0), no 4, except you set: inclusive: true
    midi n, channel: 1, velocity: 80, velocity_f: 72
    sleep 0.25
  end
  sleep 4
end

live_loop :hat_4th_onbeat_left, sync: :clock do
  #stop
  use_random_seed 2325
  use_octave -1
  notes = (ring :A3, :C4, :E4, :G4, :A2, :C3, :E3, :G3, :D4).reverse.reflect
  at (range 0, 8, step: [0.5,1.0,0.25].choose), notes do |n| # (ring 0.0, 1.0, 2.0, 3.0), no 4, except you set: inclusive: true
    midi n, channel: 1, velocity: 80, velocity_f: 72
    sleep 0.25
  end
  sleep 4
end


live_loop :melody, sync: :clock do
  stop
  use_synth :fm
  use_synth_defaults depth: 0.125, divisor: 1.0, attack: 0, release: 0.125
  
  puts "Look: #{look} ---------------"
  use_octave 1
  mel = (ring :a3, :c4, :e3, :g3, :a3, :e3)
  ptn = (ring 0,   0.5,   0.75,   1,  2, 3.0)
  at ptn, mel do |n|
    puts "hey: #{n}"
    
    midi n, channel: 4, velocity: 80, velocity_f: 72
    sleep ptn.tick
  end
  
  sleep 1
  puts "Here #{look} ---------------"
end