# Welcome to Sonic Pi

set_volume! 0.66
set_mixer_control! hpf: 21
use_sched_ahead_time 1
#use_real_time

use_bpm :link
set_link_bpm! 60
p

# syncronize to bar or beat
live_loop :met do
  puts "current bpm " + current_bpm.to_s
  4.times do |bar|
    puts "bar no: " + (bar + 1).to_s
    cue :bar
    4.times do |beat|
      puts "beat no: " + (beat + 1).to_s
      cue :beat
      sleep 1
    end
  end
end
# Welcome to Sonic Pi

set_volume! 0.66
set_mixer_control! hpf: 21
use_sched_ahead_time 1
#use_real_time

use_bpm :link
set_link_bpm! 60



# syncronize to bar or beat
live_loop :met do
  puts "current bpm " + current_bpm.to_s
  4.times do |bar|
    puts "bar no: " + (bar + 1).to_s
    cue :bar
    4.times do |beat|
      puts "beat no: " + (beat + 1).to_s
      cue :beat
      sleep 1
    end
  end
end

use_midi_defaults port: "midi_through_midi_through_port-0_14_0"

#notes = (ring :A3, :C4, :E4, :G4, :A2, :C3, :E3, :G3, :D4)

comment do
  
  at bar(0) do
    live_loop :bassline_piano, sync: :bar do
      #stop
      notes = (ring :a1, :c2, :e2, :g2, :g1, :d2, :c2, :a1)
      use_octave 0
      notes.each do |note|
        midi note, channel: 1, velocity: 80, velocity_f: 72, sustain: 1.0
        sleep 1
      end
    end
  end
  
  
  at bar(4) do
    
    live_loop :bassline_bass, sync: :bassline_piano do
      #stop
      notes = (ring :a2, :c3, :e3, :g3, :g2, :d3, :c3, :a2)
      use_octave 0
      notes.each do |note|
        midi note, channel: 3, velocity: 80, velocity_f: 72, sustain: 1.0
        sleep 1
      end
    end
  end
  
  at bar(6) do
    live_loop :piano01, sync: :beat do
      #stop
      notes = (note_range :a3, :a5, pitches: (chord :a, :m7)).reflect
      durations = (ring 0.5,1.0,0.5,1.0,0.5,0.5,0.5,0.5)
      if one_in 6
        notes = notes.reverse
        duration = (durations.look / 2)
      elsif one_in 9
        notes = notes.shuffle
        duration = (durations.look / 2)
      end
      #notes = (note_range :e2, :e3, pitches: (chord :e, :m7)).mirror
      use_octave 0
      notes.each do |note|
        
        midi note, channel: 2, velocity: 60, velocity_f: 72, sustain: 1.0
        sleep duration
      end
      
    end
  end
  
  at bar(8) do
    live_loop :banjo01, sync: :bar do
      #stop
      use_random_seed 4808
      notes = (note_range :C4, :C6, pitches: (chord :C, :maj11)).repeat.reflect.stretch(3)
      #notes = (note_range :b3, :b5, pitches: (chord :b, 'm7+5')).repeat.reflect.stretch(3).reverse
      durations = (ring 0.25,0.125,0.25,0.125,0.25,0.5,0.5,0.5)
      notes.each do |note|
        midi notes.tick, channel: 4, velocity: 60, velocity_f: 72, sustain: 0.25
        sleep durations.look
      end
    end
    
  end
  
  
  
  at bar(0) do
    live_loop :piano02, sync: :beat do
      stop
      notes01 = (note_range :a3, :a5, pitches: (chord :a, :m7)).mirror.take(4)
      notes02 = (note_range :e3, :e5, pitches: (chord :e, :m7)).reflect.take(6)
      notes03 = (note_range :f3, :f5, pitches: (chord :f, :M7)).reflect.take(4).reverse
      noteset = (ring notes01,notes02,notes03)
      durations = (ring 0.5,0.25,0.5,0.25,0.5,0.5,0.5,0.5)
      use_octave 2
      noteset.each do |notes|
        print notes
        notes.each do |note|
          midi note, channel: 2, velocity: 45, velocity_f: 45, sustain: 0.25
          sleep durations.look
          
        end
      end
    end
  end
  
  use_midi_defaults port: "midi_through_midi_through_port-0_14_0"
  
  #notes = (ring :A3, :C4, :E4, :G4, :A2, :C3, :E3, :G3, :D4)
  
  at bar(0) do
    live_loop :bassline_piano, sync: :bar do
      stop
      notes = (ring :a1, :c2, :e2, :g2, :g1, :d2, :c2, :a1)
      use_octave 0
      notes.each do |note|
        midi note, channel: 1, velocity: 80, velocity_f: 72, sustain: 1.0
        sleep 1
      end
    end
  end
  
  
  at bar(0) do
    
    live_loop :bassline_bass, sync: :bassline_piano do
      stop
      notes = (ring :a2, :c3, :e3, :g3, :g2, :d3, :c3, :a2)
      use_octave 0
      notes.each do |note|
        midi note, channel: 3, velocity: 80, velocity_f: 72, sustain: 1.0
        sleep 1
      end
    end
  end
  
end ##### end comment
print (doubles 2.0, 4).stretch(2).scale(2)
print (range 0.25, 1.0, step: 0.125, inclusive: true)

def durations
  
  # ok. for the sake of it...and perhaps bits for other fucntions
  # take the number two and double it. Four times, like Hank used to.
  # You'll then have a ring a of items, where each element is
  # repeated once. It will then, as always intended, be multipled with a tiny number
  # to demsontrate what the scale function can do when given a chance.
  # After all that, turn the whole thing into an array and what you have as an array of rings
  # from which a list of pairs will be knited
  # That is to say...well, let
  #
  an_array_of_durations = (doubles 2.0, 4).stretch(2).scale(0.0125).to_a.map { |a_duration| (knit a_duration, 2, (a_duration/2), 2) }
  
  print an_array_of_durations
  
  @fast = an_array_of_durations.pop(2)
  
  @not_as_fast = an_array_of_durations.pop(2)
  
  @medium_to_slow = an_array_of_durations.pop(2)
  
end


durations
print @fast

stop


at bar(0) do
  live_loop :piano01, sync: :beat do
    #stop
    notes = (note_range :a3, :a5, pitches: (chord :a, :m7)).reflect
    durations = (ring 0.5,1.0,0.5,1.0,0.5,0.5,0.5,0.5)
    if one_in 6
      notes = notes.reverse
      duration = (durations.look / 2)
    elsif one_in 9
      notes = notes.shuffle
      duration = (durations.look / 2)
    end
    #notes = (note_range :e2, :e3, pitches: (chord :e, :m7)).mirror
    use_octave 0
    notes.each do |note|
      
      midi note, channel: 2, velocity: 60, velocity_f: 72, sustain: 1.0
      sleep duration
    end
    
  end
end

at bar(8) do
  live_loop :banjo01, sync: :bar do
    #stop
    use_random_seed 4808
    notes = (note_range :C4, :C6, pitches: (chord :C, :maj11)).repeat.reflect.stretch(3)
    #notes = (note_range :b3, :b5, pitches: (chord :b, 'm7+5')).repeat.reflect.stretch(3).reverse
    durations = (ring 0.25,0.125,0.25,0.125,0.25,0.5,0.5,0.5)
    notes.each do |note|
      midi notes.tick, channel: 4, velocity: 60, velocity_f: 72, sustain: 0.25
      sleep durations.look
    end
  end
  
end



at bar(0) do
  live_loop :piano02, sync: :beat do
    stop
    notes01 = (note_range :a3, :a5, pitches: (chord :a, :m7)).mirror.take(4)
    notes02 = (note_range :e3, :e5, pitches: (chord :e, :m7)).reflect.take(6)
    notes03 = (note_range :f3, :f5, pitches: (chord :f, :M7)).reflect.take(4).reverse
    noteset = (ring notes01,notes02,notes03)
    durations = (ring 0.5,0.25,0.5,0.25,0.5,0.5,0.5,0.5)
    use_octave 2
    noteset.each do |notes|
      print notes
      notes.each do |note|
        midi note, channel: 2, velocity: 45, velocity_f: 45, sustain: 0.25
        sleep durations.look
        
      end
    end
  end
end
